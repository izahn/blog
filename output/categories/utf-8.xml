<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="../assets/xml/rss.xsl" media="all"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>Ista Zahn (UTF-8)</title><link>http://people.fas.harvard.edu/~izahn/</link><description></description><atom:link type="application/rss+xml" href="http://people.fas.harvard.edu/~izahn/categories/utf-8.xml" rel="self"></atom:link><language>en</language><lastBuildDate>Tue, 21 Jun 2016 18:01:39 GMT</lastBuildDate><generator>https://getnikola.com/</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>Escaping from character encoding hell in R on Windows</title><link>http://people.fas.harvard.edu/~izahn/posts/reading-data-with-non-native-encoding-in-r/</link><dc:creator>Ista Zahn</dc:creator><description>&lt;p&gt;
Note: the title of this post was inspired by &lt;a href="http://stackoverflow.com/questions/18789330/r-on-windows-character-encoding-hell"&gt;this question on stackoverflow&lt;/a&gt;.
&lt;/p&gt;

&lt;p&gt;
This section gives the basic facts and recommendations for importing files with arbitrary encoding on Windows. The issues described here by and large to not apply on Mac or Linux; they are specific to running &lt;a href="http://people.fas.harvard.edu/~izahn/r-project.org"&gt;R&lt;/a&gt; on Windows.
&lt;/p&gt;

&lt;p&gt;
If you are on a deadline and just need to get the job done this section should be all you need. Additional background and discussion is presented in later sections.
&lt;/p&gt;

&lt;p&gt;
To read a text file with non ASCII encoding into R you should a) determine the encoding and b) read it in such a way that the information is re-encoded into UTF-8, and c) ignore the bug in the &lt;code&gt;data.frame&lt;/code&gt; print method on Windows. Hopefully the encoding is specified in the documentation that accompanied your data. If not, you can guess the encoding using the &lt;code&gt;stri_read_raw&lt;/code&gt; and &lt;code&gt;stri_enc_detect&lt;/code&gt; functions in the &lt;a href="http://www.gagolewski.com/software/stringi/"&gt;stringi&lt;/a&gt;  package. You can ensure that the information is re-encoded to UTF-8 by using the &lt;a href="https://github.com/hadley/readr"&gt;readr&lt;/a&gt; package.
&lt;/p&gt;

&lt;!-- TEASER_END --&gt;

&lt;p&gt;
For example, I have two versions of a file containing numbers and Japanese characters: &lt;code&gt;japanese_utf8.csv&lt;/code&gt; is encoded in UTF-8, and &lt;code&gt;japanese_shiftjis.csv&lt;/code&gt; is encoded in SHIFT-JIS. We can read these files as follows on any platform (Windows, Linux, Mac):
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;library&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;readr&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="kp"&gt;options&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;stringsAsFactors &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;FALSE&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
read_csv&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"japanese_utf8.csv"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
	 locale &lt;span class="o"&gt;=&lt;/span&gt; locale&lt;span class="p"&gt;(&lt;/span&gt;encoding &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"UTF-8"&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
read_csv&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"japanese_shiftjis.csv"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
	 locale &lt;span class="o"&gt;=&lt;/span&gt; locale&lt;span class="p"&gt;(&lt;/span&gt;encoding &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"SHIFT-JIS"&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;pre class="example"&gt;
    No.         発行日 朝夕刊     面名 ページ
1 00001 2015年09月25日   週刊 週刊朝日    022
2 00002 2015年09月25日   週刊 週刊朝日    018
3 00003 2015年09月21日   朝刊   ３総合    003
    No.         発行日 朝夕刊     面名 ページ
1 00001 2015年09月25日   週刊 週刊朝日    022
2 00002 2015年09月25日   週刊 週刊朝日    018
3 00003 2015年09月21日   朝刊   ３総合    003
&lt;/pre&gt;

&lt;p&gt;
On Windows there is a bug in &lt;code&gt;print.data.frame&lt;/code&gt; that causes &lt;code&gt;data.frame&lt;/code&gt;'s with UTF-8 encoded columns to be displayed incorrectly in non UTF-8 locales. Running the above example on Windows produces this:
&lt;/p&gt;

&lt;pre class="example"&gt;
    No.         &amp;lt;U+767A&amp;gt;&amp;lt;U+884C&amp;gt;&amp;lt;U+65E5&amp;gt; &amp;lt;U+671D&amp;gt;&amp;lt;U+5915&amp;gt;&amp;lt;U+520A&amp;gt;                 &amp;lt;U+9762&amp;gt;&amp;lt;U+540D&amp;gt; &amp;lt;U+30DA&amp;gt;&amp;lt;U+30FC&amp;gt;&amp;lt;U+30B8&amp;gt;
1 00001 2015&amp;lt;U+5E74&amp;gt;09&amp;lt;U+6708&amp;gt;25&amp;lt;U+65E5&amp;gt;         &amp;lt;U+9031&amp;gt;&amp;lt;U+520A&amp;gt; &amp;lt;U+9031&amp;gt;&amp;lt;U+520A&amp;gt;&amp;lt;U+671D&amp;gt;&amp;lt;U+65E5&amp;gt;                      022
2 00002 2015&amp;lt;U+5E74&amp;gt;09&amp;lt;U+6708&amp;gt;25&amp;lt;U+65E5&amp;gt;         &amp;lt;U+9031&amp;gt;&amp;lt;U+520A&amp;gt; &amp;lt;U+9031&amp;gt;&amp;lt;U+520A&amp;gt;&amp;lt;U+671D&amp;gt;&amp;lt;U+65E5&amp;gt;                      018
3 00003 2015&amp;lt;U+5E74&amp;gt;09&amp;lt;U+6708&amp;gt;21&amp;lt;U+65E5&amp;gt;         &amp;lt;U+671D&amp;gt;&amp;lt;U+520A&amp;gt;                3&amp;lt;U+7DCF&amp;gt;&amp;lt;U+5408&amp;gt;                      003

    No.         &amp;lt;U+767A&amp;gt;&amp;lt;U+884C&amp;gt;&amp;lt;U+65E5&amp;gt; &amp;lt;U+671D&amp;gt;&amp;lt;U+5915&amp;gt;&amp;lt;U+520A&amp;gt;                 &amp;lt;U+9762&amp;gt;&amp;lt;U+540D&amp;gt; &amp;lt;U+30DA&amp;gt;&amp;lt;U+30FC&amp;gt;&amp;lt;U+30B8&amp;gt;
1 00001 2015&amp;lt;U+5E74&amp;gt;09&amp;lt;U+6708&amp;gt;25&amp;lt;U+65E5&amp;gt;         &amp;lt;U+9031&amp;gt;&amp;lt;U+520A&amp;gt; &amp;lt;U+9031&amp;gt;&amp;lt;U+520A&amp;gt;&amp;lt;U+671D&amp;gt;&amp;lt;U+65E5&amp;gt;                      022
2 00002 2015&amp;lt;U+5E74&amp;gt;09&amp;lt;U+6708&amp;gt;25&amp;lt;U+65E5&amp;gt;         &amp;lt;U+9031&amp;gt;&amp;lt;U+520A&amp;gt; &amp;lt;U+9031&amp;gt;&amp;lt;U+520A&amp;gt;&amp;lt;U+671D&amp;gt;&amp;lt;U+65E5&amp;gt;                      018
3 00003 2015&amp;lt;U+5E74&amp;gt;09&amp;lt;U+6708&amp;gt;21&amp;lt;U+65E5&amp;gt;         &amp;lt;U+671D&amp;gt;&amp;lt;U+520A&amp;gt;                3&amp;lt;U+7DCF&amp;gt;&amp;lt;U+5408&amp;gt;                      003
&lt;/pre&gt;
&lt;p&gt;
which looks terrible but does not actually indicate a problem. The information is encoded correctly, but due to a long-standing bug it is &lt;span class="underline"&gt;displayed&lt;/span&gt; incorrectly. You can check to see if the values are correct by converting the data.frame by (ab)using &lt;code&gt;print.listof&lt;/code&gt;, e.g.,
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kp"&gt;print.listof&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;read_csv&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"japanese_shiftjis.csv"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
		      locale &lt;span class="o"&gt;=&lt;/span&gt; locale&lt;span class="p"&gt;(&lt;/span&gt;encoding &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"SHIFT-JIS"&lt;/span&gt;&lt;span class="p"&gt;)))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;pre class="example"&gt;
No. :
[1] "00001" "00002" "00003"

発行日 :
[1] "2015年09月25日" "2015年09月25日" "2015年09月21日"

朝夕刊 :
[1] "週刊" "週刊" "朝刊"

面名 :
[1] "週刊朝日" "週刊朝日" "３総合"  

ページ :
[1] "022" "018" "003"
&lt;/pre&gt;

&lt;p&gt;
To recap: 
&lt;/p&gt;
&lt;ul class="org-ul"&gt;
&lt;li&gt;Regardless of platform (Windows, Mac Linux), use the &lt;a href="https://github.com/hadley/readr"&gt;readr&lt;/a&gt; package to read data into R. This will re-encode the contents of the file to UTF-8 for you. 
&lt;/li&gt;
&lt;li&gt;Make sure you specify the encoding using the &lt;code&gt;locale&lt;/code&gt; argument as shown in the example above. 
&lt;/li&gt;
&lt;li&gt;Ignore the ugly &lt;code&gt;print.data.frame&lt;/code&gt; bug and use &lt;code&gt;print.listof&lt;/code&gt; to check that your data was imported correctly.
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;
Those wishing for more details about this issue can read on.
&lt;/p&gt;


&lt;div id="outline-container-sec-1" class="outline-2"&gt;
&lt;h2 id="sec-1"&gt;What is the problem?&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-1"&gt;
&lt;p&gt;
The problem is that the basic R functions for reading and writing data from and to files does no work in any reasonable way on Windows. If you are struggling with this you are not alone! There are numerous &lt;a href="http://stackoverflow.com/search?tab=votes&amp;amp;q=%255br%255d%2520%255bencoding%255d%2520windows"&gt;questions on stackoverflow&lt;/a&gt;, blog posts (e.g., &lt;a href="http://www.r-bloggers.com/r-and-foreign-characters/"&gt;this one&lt;/a&gt; by Rolf Fredheim, and &lt;a href="http://withr.me/configure-character-encoding-for-r-under-linux-and-windows/"&gt;another&lt;/a&gt; by Huidong Tian), and anguished &lt;a href="http://search.gmane.org/?query=encoding+windows+%2522utf-8%2522+%2522read%2522&amp;amp;author=&amp;amp;group=gmane.comp.lang.r.general&amp;amp;sort=date&amp;amp;DEFAULTOP=and&amp;amp;xP=Zencod%2509Zwindow%2509utf%25098%2509read&amp;amp;xFILTERS=Gcomp.lang.r.general---A"&gt;mailing list posts&lt;/a&gt;. Thinking of the person-hours wasted on this issue over the years almost brings a tear to my eye. 
&lt;/p&gt;

&lt;p&gt;
Let's try it, using some simplified data from a project I worked on last year. For illustration I've created two files containing a mix of English letters, numbers, and Japanese characters. I saved one version with UTF-8 encoding, and another with SHIFT-JIS. On Linux we can read both files easily, provided only that we correctly specify the encoding if the file is not already encoded in UTF-8:
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;read.csv&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"japanese_utf8.csv"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;pre class="example"&gt;
  No.         発行日 朝夕刊     面名 ページ
1   1 2015年09月25日   週刊 週刊朝日     22
2   2 2015年09月25日   週刊 週刊朝日     18
3   3 2015年09月21日   朝刊   ３総合      3
&lt;/pre&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;read.csv&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"japanese_shiftjis.csv"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; fileEncoding &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"SHIFT-JIS"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;pre class="example"&gt;
  No.         発行日 朝夕刊     面名 ページ
1   1 2015年09月25日   週刊 週刊朝日     22
2   2 2015年09月25日   週刊 週刊朝日     18
3   3 2015年09月21日   朝刊   ３総合      3
&lt;/pre&gt;

&lt;p&gt;
On Windows things are much more difficult. Using &lt;code&gt;read.csv&lt;/code&gt; with the default options does not work because &lt;code&gt;read.csv&lt;/code&gt; assumes that the encoding of the file matches the Windows locale settings:
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;read.csv&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"japanese_utf8.csv"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;pre class="example"&gt;
  No.         ç.ºè.Œæ.. æœ.å..å.Š       é..å.. ãƒšãƒ.ã..
1   1 2015å¹´09æœˆ25æ—¥    é€±åˆŠ é€±åˆŠæœæ—¥        22
2   2 2015å¹´09æœˆ25æ—¥    é€±åˆŠ é€±åˆŠæœæ—¥        18
3   3 2015å¹´09æœˆ21æ—¥    æœåˆŠ    ï¼“ç·åˆ         3
&lt;/pre&gt;

&lt;p&gt;
Trying to tell R that the file is encoded in UTF-8 not a general solution because &lt;code&gt;read.csv&lt;/code&gt; will then try to re-encode from UTF-8 to the native encoding, which may or may not work depending on the contents of the file. On my system trying to read a UTF-8 encoded file containing Japanese characters with the fileEncoding falls flat on its face:
&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;read.csv&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"japanese_utf8.csv"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; fileEncoding &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"UTF-8"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;pre class="example"&gt;
[1] No. X  
&amp;lt;0 rows&amp;gt; (or 0-length row.names)
Warning messages:
1: In read.table(file = file, header = header, sep = sep, quote = quote,  :
  invalid input found on input connection 'japanese_utf8.csv'
2: In read.table(file = file, header = header, sep = sep, quote = quote,  :
  incomplete final line found by readTableHeader on 'japanese_utf8.csv'
&lt;/pre&gt;


&lt;p&gt;
Finally, we might try the &lt;code&gt;encoding&lt;/code&gt; argument rather than &lt;code&gt;fileEncoding&lt;/code&gt;. This simply marks the strings with the specified encoding:
&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;read.csv&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"japanese_utf8.csv"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; encoding &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"UTF-8"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;pre class="example"&gt;
read.csv("japanese_utf8.csv", encoding = "UTF-8")
  No.        X.U.767A..U.884C..U.65E5. X.U.671D..U.5915..U.520A.                X.U.9762..U.540D. X.U.30DA..U.30FC..U.30B8.
1   1 2015&amp;lt;U+5E74&amp;gt;09&amp;lt;U+6708&amp;gt;25&amp;lt;U+65E5&amp;gt;          &amp;lt;U+9031&amp;gt;&amp;lt;U+520A&amp;gt; &amp;lt;U+9031&amp;gt;&amp;lt;U+520A&amp;gt;&amp;lt;U+671D&amp;gt;&amp;lt;U+65E5&amp;gt;                        22
2   2 2015&amp;lt;U+5E74&amp;gt;09&amp;lt;U+6708&amp;gt;25&amp;lt;U+65E5&amp;gt;          &amp;lt;U+9031&amp;gt;&amp;lt;U+520A&amp;gt; &amp;lt;U+9031&amp;gt;&amp;lt;U+520A&amp;gt;&amp;lt;U+671D&amp;gt;&amp;lt;U+65E5&amp;gt;                        18
3   3 2015&amp;lt;U+5E74&amp;gt;09&amp;lt;U+6708&amp;gt;21&amp;lt;U+65E5&amp;gt;          &amp;lt;U+671D&amp;gt;&amp;lt;U+520A&amp;gt;                3&amp;lt;U+7DCF&amp;gt;&amp;lt;U+5408&amp;gt;                         3
&lt;/pre&gt;
&lt;p&gt;
This kind of works, though you wouldn't know it from the output. As mentioned above, there is a bug in the &lt;code&gt;print.data.frame&lt;/code&gt; function that prevents UTF-8 encoded text from displaying correctly. We can use another print method to see that the column values have been read in correctly:
&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kp"&gt;print.listof&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;read.csv&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"japanese_utf8.csv"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; encoding &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"UTF-8"&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;pre class="example"&gt;
No. :
[1] 1 2 3

X.U.767A..U.884C..U.65E5. :
[1] "2015年09月25日" "2015年09月25日" "2015年09月21日"

X.U.671D..U.5915..U.520A. :
[1] "週刊" "週刊" "朝刊"

X.U.9762..U.540D. :
[1] "週刊朝日" "週刊朝日" "３総合"  

X.U.30DA..U.30FC..U.30B8. :
[1] 22 18  3
&lt;/pre&gt;

&lt;p&gt;
Unfortunately there are two problems with this: first, the names of the columns have not been correctly encoded, and second, this will only work if your input data is in UTF-8 in the first place. Trying to apply this strategy to our SHIFT-JIS encoded file will not work at all because we &lt;span class="underline"&gt;cannot&lt;/span&gt; mark strings with arbitrary encoding, only with UTF-8&lt;sup&gt;&lt;a id="fnr.1" name="fnr.1" class="footref" href="http://people.fas.harvard.edu/~izahn/posts/reading-data-with-non-native-encoding-in-r/#fn.1"&gt;1&lt;/a&gt;&lt;/sup&gt;. Trying to mark the string as SHIFT-JIS will silently fail:
&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kp"&gt;print.listof&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;read.csv&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"japanese_shiftjis.csv"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; encoding &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"SHIFT-JIS"&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;pre class="example"&gt;
No. :
[1] 1 2 3

X...s.ú :
[1] "2015”N09ŒŽ25“ú" "2015”N09ŒŽ25“ú" "2015”N09ŒŽ21“ú"

X....Š. :
[1] "TŠ§" "TŠ§" "’©Š§"

X.Ê.. :
[1] "TŠ§’©“ú" "TŠ§’©“ú" "‚R‘‡"  

ƒy..ƒW :
[1] 22 18  3
&lt;/pre&gt;

&lt;p&gt;
Ouch! Why is this so hard? Can we make it suck less?
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-sec-2" class="outline-2"&gt;
&lt;h2 id="sec-2"&gt;Encoding in R&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-2"&gt;
&lt;p&gt;
Basically R gives you two ways of handling character encoding. You can use the default encoding of your OS, or you can use UTF-8&lt;sup&gt;&lt;a id="fnr.1.100" name="fnr.1.100" class="footref" href="http://people.fas.harvard.edu/~izahn/posts/reading-data-with-non-native-encoding-in-r/#fn.1"&gt;1&lt;/a&gt;&lt;/sup&gt;. On OS X and Linux these options are often the same, since the default OS encoding is usually UTF-8; this is a great advantage because just about everything can be represented in UTF-8. On Windows there is no such luck. On my Windows 7 machine the default is "Windows code page 1252"; many characters (such as Japanese) cannot be represented in code page 1252. If I want to work with Japanese text in R on Windows I have two options; change my locale to Japanese, or I can convert strings to UTF-8 and mark them as such.
&lt;/p&gt;

&lt;p&gt;
In some ways just changing your locale to one that can accommodate the data you are working with is the simplest approach. Again, on Mac and Linux the locale usually specifies UTF-8 encoding, so no changes are needed; things should just work as you would expect them to. On windows we can change the locale to match the data we are working with using the &lt;code&gt;Sys.setlocale&lt;/code&gt; function. This sometimes works well; for example, we can read our UTF-8 and SHIFT-JIS encoded data on Windows as follows:
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;setlocale&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"LC_ALL"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"English_United States.932"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
read.csv&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"japanese_shiftjis.csv"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
read.csv&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"japanese_utf8.csv"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; fileEncoding &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"UTF-8"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;pre class="example"&gt;
[1] "LC_COLLATE=English_United States.932;LC_CTYPE=English_United States.932;LC_MONETARY=English_United States.932;LC_NUMERIC=C;LC_TIME=English_United States.932"

  No.         発行日 朝夕刊     面名 ページ
1   1 2015年09月25日   週刊 週刊朝日     22
2   2 2015年09月25日   週刊 週刊朝日     18
3   3 2015年09月21日   朝刊   ３総合      3

  No.         発行日 朝夕刊     面名 ページ
1   1 2015年09月25日   週刊 週刊朝日     22
2   2 2015年09月25日   週刊 週刊朝日     18
3   3 2015年09月21日   朝刊   ３総合      3
&lt;/pre&gt;

&lt;p&gt;
This works fine until we want to read some other kind of text in the same R session, and then we are right back to the same old problem. Another issue with this method is that it does not work in Rstudio unless the locale is set on startup; you cannot change the locale of a running session in Rstudio&lt;sup&gt;&lt;a id="fnr.2" name="fnr.2" class="footref" href="http://people.fas.harvard.edu/~izahn/posts/reading-data-with-non-native-encoding-in-r/#fn.2"&gt;2&lt;/a&gt;&lt;/sup&gt;.
&lt;/p&gt;

&lt;p&gt;
Because the &lt;code&gt;Sys.setlocale&lt;/code&gt; method only works for a subset of languages in any given session, our best bet is to read store everything in UTF-8 (and make sure it is marked as such). It is not convenient to do this using the &lt;code&gt;read.table&lt;/code&gt; family of functions in R, but it is possible with some care:
&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;x &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; read.csv&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"japanese_shiftjis.csv"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; 
	      encoding &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"UTF-8"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; 
	      check.names &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;FALSE&lt;/span&gt; &lt;span class="c1"&gt;# otherwise R will mangle the names&lt;/span&gt;
	      &lt;span class="p"&gt;)&lt;/span&gt;
charcols &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="kp"&gt;sapply&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;x&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kp"&gt;is.numeric&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
x&lt;span class="p"&gt;[&lt;/span&gt;charcols&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="kp"&gt;lapply&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;x&lt;span class="p"&gt;[&lt;/span&gt;charcols&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="kp"&gt;iconv&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; from &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"SHIFT-JIS"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; to &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"UTF-8"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="kp"&gt;names&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;x&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="kp"&gt;iconv&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kp"&gt;names&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;x&lt;span class="p"&gt;),&lt;/span&gt; from &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"SHIFT-JIS"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; to &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"UTF-8"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="kp"&gt;print.listof&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;x&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;pre class="example"&gt;
No. :
[1] 1 2 3

発行日 :
[1] "2015年09月25日" "2015年09月25日" "2015年09月21日"

朝夕刊 :
[1] "週刊" "週刊" "朝刊"

面名 :
[1] "週刊朝日" "週刊朝日" "３総合"  

ページ :
[1] 22 18  3
&lt;/pre&gt;
&lt;p&gt;
OK it works, but honestly that too much work for something as simple as reading a .csv file into R. As suggested at the beginning of this post, a better strategy is to use the &lt;a href="https://github.com/hadley/readr"&gt;readr&lt;/a&gt; package because it will do the conversion to UTF-8 for you:
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kp"&gt;print.listof&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;read_csv&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"arabic_utf-8.csv"&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; locale &lt;span class="o"&gt;=&lt;/span&gt; locale&lt;span class="p"&gt;(&lt;/span&gt;encoding &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"UTF-8"&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="kp"&gt;print.listof&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;read_csv&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"japanese_utf8.csv"&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; locale &lt;span class="o"&gt;=&lt;/span&gt; locale&lt;span class="p"&gt;(&lt;/span&gt;encoding &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"UTF-8"&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="kp"&gt;print.listof&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;read_csv&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"japanese_shiftjis.csv"&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; locale &lt;span class="o"&gt;=&lt;/span&gt; locale&lt;span class="p"&gt;(&lt;/span&gt;encoding &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"SHIFT-JIS"&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;pre class="example"&gt;
X5 :
[1] "1895-01-02" "1895-01-07" "1895-01-16"
X8 :
[1] "اصلى" "اصلى" "اصلى"
X12 :
[1] "وقائع" "وقائع" "وقائع"

No. :
[1] "00001" "00002" "00003"
発行日 :
[1] "2015年09月25日" "2015年09月25日" "2015年09月21日"
朝夕刊 :
[1] "週刊" "週刊" "朝刊"
面名 :
[1] "週刊朝日" "週刊朝日" "３総合"  
ページ :
[1] "022" "018" "003"


No. :
[1] "00001" "00002" "00003"
発行日 :
[1] "2015年09月25日" "2015年09月25日" "2015年09月21日"
朝夕刊 :
[1] "週刊" "週刊" "朝刊"
面名 :
[1] "週刊朝日" "週刊朝日" "３総合"  
ページ :
[1] "022" "018" "003"
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-sec-3" class="outline-2"&gt;
&lt;h2 id="sec-3"&gt;Files&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-3"&gt;
&lt;p&gt;
Here are the &lt;a href="http://people.fas.harvard.edu/~izahn/example_files/blog/encoding_hell.zip"&gt;example data files and code&lt;/a&gt; and needed to run the examples in this post.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="footnotes"&gt;
&lt;h2 class="footnotes"&gt;Footnotes: &lt;/h2&gt;
&lt;div id="text-footnotes"&gt;

&lt;div class="footdef"&gt;&lt;sup&gt;&lt;a id="fn.1" name="fn.1" class="footnum" href="http://people.fas.harvard.edu/~izahn/posts/reading-data-with-non-native-encoding-in-r/#fnr.1"&gt;1&lt;/a&gt;&lt;/sup&gt; &lt;p class="footpara"&gt;
We can also mark strings as encoded in &lt;code&gt;latin1&lt;/code&gt;, but that is not useful if you take my advice and store everything in UTF-8.
&lt;/p&gt;&lt;/div&gt;

&lt;div class="footdef"&gt;&lt;sup&gt;&lt;a id="fn.2" name="fn.2" class="footnum" href="http://people.fas.harvard.edu/~izahn/posts/reading-data-with-non-native-encoding-in-r/#fnr.2"&gt;2&lt;/a&gt;&lt;/sup&gt; &lt;p class="footpara"&gt;
See &lt;a href="https://support.rstudio.com/hc/en-us/articles/200532197-Character-Encoding"&gt;https://support.rstudio.com/hc/en-us/articles/200532197-Character-Encoding&lt;/a&gt;
&lt;/p&gt;&lt;/div&gt;


&lt;/div&gt;
&lt;/div&gt;</description><category>Encoding</category><category>Files</category><category>R</category><category>SHIFT-JIS</category><category>UTF-8</category><guid>http://people.fas.harvard.edu/~izahn/posts/reading-data-with-non-native-encoding-in-r/</guid><pubDate>Tue, 14 Jun 2016 17:57:09 GMT</pubDate></item></channel></rss>
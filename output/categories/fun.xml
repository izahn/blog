<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="../assets/xml/rss.xsl" media="all"?><rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Ista Zahn (fun)</title><link>http://people.fas.harvard.edu/~izahn/</link><description></description><atom:link href="http://people.fas.harvard.edu/~izahn/categories/fun.xml" rel="self" type="application/rss+xml"></atom:link><language>en</language><lastBuildDate>Wed, 07 Dec 2016 20:24:49 GMT</lastBuildDate><generator>https://getnikola.com/</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>Useless but fun R packages</title><link>http://people.fas.harvard.edu/~izahn/posts/useless-but-fun-r-packages/</link><dc:creator>Ista Zahn</dc:creator><description>&lt;p&gt;
&lt;a href="http://r-project.org"&gt;R&lt;/a&gt; is useful for many things. But, it is not only useful! There is plenty of fun to be had as well. In celebration of Summer I'm going to take a look at some useless (but fun!) R packages.
&lt;/p&gt;

&lt;!-- TEASER_END --&gt;

&lt;div id="outline-container-sec-1" class="outline-2"&gt;
&lt;h2 id="sec-1"&gt;Fortune teller&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-1"&gt;
&lt;p&gt;
&lt;a href="https://cran.r-project.org/web/packages/fortunes/index.html"&gt;fortunes&lt;/a&gt; is probably the best-known "just for fun" R package. It is maintained by Achim Zeileis and features contributions from such R luminaries as Peter Dalgaard, Uwe Ligges, Kevin Wright, and many others. The &lt;code&gt;fortunes&lt;/code&gt; package been amusing bored statisticians and programmers since 2004. Since that time the &lt;code&gt;fortunes&lt;/code&gt; package developers have been selecting amusing quotes from the &lt;a href="https://stat.ethz.ch/mailman/listinfo/r-help"&gt;R-help mailing list&lt;/a&gt; and other sources and compiling them for your enjoyment. Let's take a look.
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;## install.packages("fortunes") # if you don't already have it&lt;/span&gt;
&lt;span class="kn"&gt;library&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;fortunes&lt;span class="p"&gt;)&lt;/span&gt;
fortune&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;pre class="example"&gt;
When in doubt, keep adding slashes until it works.
   -- Joran Elias (on how to escape a backslash in R)
      Stackoverflow (March 2015)
&lt;/pre&gt;

&lt;p&gt;
When called without arguments, the &lt;code&gt;fortune&lt;/code&gt; function will select a random fortune. Calling &lt;code&gt;fortune&lt;/code&gt; again will select another random quote:
&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;fortune&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;pre class="example"&gt;
RAM is cheap and thinking hurts.
   -- Uwe Ligges (about memory requirements in R)
      R-help (June 2007)
&lt;/pre&gt;

&lt;p&gt;
If you want to specify a particular quote you can do so by number or by character search:
&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;fortune&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;204&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
fortune&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"memory"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;pre class="example"&gt;
memory problems (not me. my pc!)
   -- Sara Mouro (subject line for an R-help request)
      R-help (January 2008)

RAM is cheap and thinking hurts.
   -- Uwe Ligges (about memory requirements in R)
      R-help (June 2007)
&lt;/pre&gt;

&lt;p&gt;
That's about it. Well, there are some other options, see &lt;code&gt;?fortune&lt;/code&gt; for the details.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-sec-2" class="outline-2"&gt;
&lt;h2 id="sec-2"&gt;Cow says what?&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-2"&gt;
&lt;p&gt;
If you are a Unix user of a certain age you have no doubt heard of the famous &lt;a href="https://en.wikipedia.org/wiki/Cowsay"&gt;cowsay&lt;/a&gt; program. Now R users can join the fun with the &lt;a href="https://github.com/sckott/cowsay"&gt;cowsay R package&lt;/a&gt; by Scott Chamberlain. Like the &lt;code&gt;fortunes&lt;/code&gt; package, &lt;code&gt;cowsay&lt;/code&gt; exports just one function; &lt;code&gt;say&lt;/code&gt;. Let's take a look:
&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;## install.packages("cowsay")&lt;/span&gt;
&lt;span class="kn"&gt;library&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;cowsay&lt;span class="p"&gt;)&lt;/span&gt;
say&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Hello world!"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;pre class="example"&gt;
 -------------- 
Hello world! 
 --------------
    \
      \
        \
            |\___/|
          ==) ^Y^ (==
            \  ^  /
             )=*=(
            /     \
            |     |
           /| | | |\
           \| | |_|/\
      jgs  //_// ___/
               \_)
&lt;/pre&gt;

&lt;p&gt;
Cute, but I was led to believe there would be a cow involved! 
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;say&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Moo may represent an idea, but only the cow knows.\n --Mason Cooley"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    by &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"cow"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;pre class="example"&gt;
 ----- 
Moo may represent an idea, but only the cow knows.
 --Mason Cooley 
 ------ 
    \   ^__^ 
     \  (oo)\ ________ 
        (__)\         )\ /\ 
             ||------w|
             ||      ||
&lt;/pre&gt;

&lt;p&gt;
There is no option to randomly select an animal, but we can achieve that ourselves easily enough.
&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;someone_say_hello &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="kr"&gt;function&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  animal &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="kp"&gt;sample&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kp"&gt;names&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;animals&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  say&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kp"&gt;paste&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Hello, I'm a "&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; animal&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"."&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; collapse &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;""&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; by &lt;span class="o"&gt;=&lt;/span&gt; animal&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
someone_say_hello&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;pre class="example"&gt;
 ----- 
Hello, I'm a  bigcat . 
 ------ 
    \   
     \
                \`*-.
                 )  _`-.
                .  : `. .
                : _   '  \
                ; *` _.   `*-._
                `-.-'          `-.
                  ;       `       `.
                  :.       .       \
                  .\  .   :   .-'   .
                  '  `+.;  ;  '      :
                  :  '  |    ;       ;-.
                  ; '   : :`-:     _.`* ;
               .*' /  .*' ; .*`- +'  `*'
     [bug]     `*-*   `*-*  `*-*'
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-sec-3" class="outline-2"&gt;
&lt;h2 id="sec-3"&gt;Putting it all together&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-3"&gt;
&lt;p&gt;
When I teach R I emphasize composability. That is, unlike some other statistics packages, R enables you to take the output from one function and pass in on to another. We can take advantage of the excellent composability R provides to do useful things like extract coefficients from a list of model fits and put them into a LaTeX table. Or we can use it to do useless things like making a cow tell us our fortune.
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;someone_say_my_fortune &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="kr"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;x&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  animal &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; animal &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="kp"&gt;sample&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kp"&gt;names&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;animals&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  say&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kp"&gt;paste&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;fortune&lt;span class="p"&gt;(),&lt;/span&gt; collapse &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"\n"&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; by &lt;span class="o"&gt;=&lt;/span&gt; animal&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
someone_say_my_fortune&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;pre class="example"&gt;
 ------------- 
Only with a very high signal to noise ratio (e.g., high true R^2) can 
torturing data lead to a confession to something other than what the 
analyst wants to hear.
Frank Harrell
NA
R-help
April 2010 
 -------------- 
              \   
               \  
                \
_____________________                              _____________________
`-._                 \           |\__/|           /                 _.-'
    \                 \          |    |          /                 /
     \                 `-_______/      \_______-'                 /
      |                                                          |
      |                                                          |
      |                                                          |
      /                                                          \
     /_____________                                  _____________\
                   `----._                    _.----'
                          `--.            .--'
                              `-.      .-'
                                 \    / :F_P:
                                  \  /
                                   \/
&lt;/pre&gt;

&lt;p&gt;
Because &lt;code&gt;fortune&lt;/code&gt; gives a random quote each time, and we randomly select animals each time, we will get a surprising new delight every time we call the &lt;code&gt;someone_say_my_fortune&lt;/code&gt; function.
&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;someone_say_my_fortune&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;pre class="example"&gt;
 ----- 
There's an informal tradition that those announcements [about R releases]
contain at least one mistake, but apparently I forgot this time, so users 
have to make up their own....
Peter Dalgaard
about an apparent non-bug report in his former R-announce message
R-help
December 2009 
 ------ 
    \   
     \
         _
       _/ }
      `&amp;gt;' \
      `|   \
       |   /'-.     .-.
        \'     ';`--' .'
         \'.    `'-./
          '.`-..-;`
            `;-..'
            _| _|
            /` /` [nosig]
&lt;/pre&gt;

&lt;p&gt;
If you want to get really silly about it, you could call that function in your &lt;a href="https://cran.r-project.org/doc/manuals/r-release/R-intro.html#Customizing-the-environment"&gt;.Rprofile&lt;/a&gt;. Or, if you are package author you could add some spice to your warning and error messages by having an ASCII art animal say them. Go forth and have fun!
&lt;/p&gt;

&lt;p&gt;
If you know of other useless (but fun!) R packages let me know in the comments. 
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;</description><category>fun</category><category>R</category><guid>http://people.fas.harvard.edu/~izahn/posts/useless-but-fun-r-packages/</guid><pubDate>Tue, 21 Jun 2016 00:44:13 GMT</pubDate></item></channel></rss>